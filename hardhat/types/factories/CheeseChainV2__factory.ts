/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { CheeseChainV2, CheeseChainV2Interface } from "../CheeseChainV2";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "_lotId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "bool",
        name: "_result",
        type: "bool",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "_timestamp",
        type: "uint256",
      },
    ],
    name: "LabResultAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "_lotId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_timestamp",
        type: "uint256",
      },
    ],
    name: "LotAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "_milkBatchId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_timestamp",
        type: "uint256",
      },
    ],
    name: "NewMilkBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "enum CheeseChainV2.Role",
            name: "role",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
        ],
        indexed: false,
        internalType: "struct CheeseChainV2.Participant",
        name: "participant",
        type: "tuple",
      },
    ],
    name: "ParticipantAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "enum CheeseChainV2.Role",
            name: "role",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
        ],
        indexed: false,
        internalType: "struct CheeseChainV2.Participant",
        name: "participant",
        type: "tuple",
      },
    ],
    name: "RoleChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "_stepId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_timestamp",
        type: "uint256",
      },
    ],
    name: "StepAdded",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "lotNumber",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "result",
        type: "bool",
      },
    ],
    name: "addLabResult",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "milkBatchIds",
        type: "uint256[]",
      },
    ],
    name: "addLot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "latitude",
            type: "string",
          },
          {
            internalType: "string",
            name: "longitude",
            type: "string",
          },
        ],
        internalType: "struct CheeseChainV2.Coordinates",
        name: "coordinates",
        type: "tuple",
      },
    ],
    name: "addMilkBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "enum CheeseChainV2.Role",
            name: "role",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
        ],
        internalType: "struct CheeseChainV2.Participant",
        name: "participant",
        type: "tuple",
      },
    ],
    name: "addParticipant",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "lotNumber",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "string",
            name: "latitude",
            type: "string",
          },
          {
            internalType: "string",
            name: "longitude",
            type: "string",
          },
        ],
        internalType: "struct CheeseChainV2.Coordinates",
        name: "coordinates",
        type: "tuple",
      },
    ],
    name: "addStep",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "administrator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
      {
        internalType: "enum CheeseChainV2.Role",
        name: "_newRole",
        type: "uint8",
      },
    ],
    name: "changeParticipantRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "isAdministrator",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "isBasicParticipant",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "isLaboratory",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "isMilkProducer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "laboratory",
    outputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "enum CheeseChainV2.Role",
        name: "role",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "lots",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "result",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
        ],
        internalType: "struct CheeseChainV2.TestResult",
        name: "testResult",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "lastStep",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "milkBatches",
    outputs: [
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "producer",
        type: "address",
      },
      {
        components: [
          {
            internalType: "string",
            name: "latitude",
            type: "string",
          },
          {
            internalType: "string",
            name: "longitude",
            type: "string",
          },
        ],
        internalType: "struct CheeseChainV2.Coordinates",
        name: "coordinates",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "participants",
    outputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "enum CheeseChainV2.Role",
        name: "role",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "removeParticipant",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "steps",
    outputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "previousStep",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "string",
            name: "latitude",
            type: "string",
          },
          {
            internalType: "string",
            name: "longitude",
            type: "string",
          },
        ],
        internalType: "struct CheeseChainV2.Coordinates",
        name: "coordinates",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalBatches",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalLots",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSteps",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50600280546001600160a01b03191633179055611bc0806100326000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c80637217e0b9116100ad578063dfc2e25111610071578063dfc2e2511461028b578063e79703421461029e578063ef8fd516146102b1578063f1648e84146102c4578063f53d0a8e1461033957600080fd5b80637217e0b914610227578063799712661461024a578063bab5e3d514610252578063c0e0453914610265578063cf23b3771461027857600080fd5b80634e266aea116100f45780634e266aea146101cb578063633342fe146101ed578063668a2001146102005780636931b3ae1461021557806369ff6abb1461021e57600080fd5b806309e69ede146101315780630a2eb3011461015c578063277065841461018e5780632a83aada146101a1578063360f277b146101b4575b600080fd5b61014461013f366004611377565b610364565b60405161015393929190611615565b60405180910390f35b61017e61016a366004611377565b6002546001600160a01b0391821691161490565b6040519015158152602001610153565b61017e61019c366004611377565b61041c565b61017e6101af366004611377565b610466565b6101bd60015481565b604051908152602001610153565b6101de6101d93660046114b5565b61046f565b60405161015393929190611840565b61017e6101fb366004611377565b6105c9565b61021361020e366004611377565b6105d2565b005b6101bd60005481565b6101bd60085481565b61023a6102353660046114b5565b610680565b60405161015394939291906115de565b6101446107e3565b610213610260366004611442565b6107f2565b61021361027336600461139a565b610967565b6102136102863660046113d2565b610a74565b61021361029936600461147d565b610d38565b6102136102ac3660046114cd565b610ed4565b6102136102bf3660046114f5565b610fa8565b61030f6102d23660046114b5565b6006602090815260009182526040918290208251808401909352805460ff1615158352600181015491830191909152600281015460039091015483565b60408051845115158152602094850151948101949094528301919091526060820152608001610153565b60025461034c906001600160a01b031681565b6040516001600160a01b039091168152602001610153565b60076020526000908152604090208054819061037f9061191e565b80601f01602080910402602001604051908101604052809291908181526020018280546103ab9061191e565b80156103f85780601f106103cd576101008083540402835291602001916103f8565b820191906000526020600020905b8154815290600101906020018083116103db57829003601f168201915b5050506001909301549192505060ff8116906001600160a01b036101009091041683565b600060025b6001600160a01b03831660009081526007602052604090206001015460ff16600381111561045f57634e487b7160e01b600052602160045260246000fd5b1492915050565b60006001610421565b6009602052600090815260409081902080546001820154835180850190945260028301805492946001600160a01b039092169392829082906104b09061191e565b80601f01602080910402602001604051908101604052809291908181526020018280546104dc9061191e565b80156105295780601f106104fe57610100808354040283529160200191610529565b820191906000526020600020905b81548152906001019060200180831161050c57829003601f168201915b505050505081526020016001820180546105429061191e565b80601f016020809104026020016040519081016040528092919081815260200182805461056e9061191e565b80156105bb5780601f10610590576101008083540402835291602001916105bb565b820191906000526020600020905b81548152906001019060200180831161059e57829003601f168201915b505050505081525050905083565b60006003610421565b6002546001600160a01b031633146106055760405162461bcd60e51b81526004016105fc90611650565b60405180910390fd5b6001600160a01b038082166000908152600760205260409020600101548291610100909104166106475760405162461bcd60e51b81526004016105fc9061169b565b6001600160a01b03821660009081526007602052604081209061066a82826111ae565b5060010180546001600160a81b03191690555050565b6005602052600090815260409081902080546001820154600283015484518086019095526003840180546001600160a01b039094169592949193919291829082906106ca9061191e565b80601f01602080910402602001604051908101604052809291908181526020018280546106f69061191e565b80156107435780601f1061071857610100808354040283529160200191610743565b820191906000526020600020905b81548152906001019060200180831161072657829003601f168201915b5050505050815260200160018201805461075c9061191e565b80601f01602080910402602001604051908101604052809291908181526020018280546107889061191e565b80156107d55780601f106107aa576101008083540402835291602001916107d5565b820191906000526020600020905b8154815290600101906020018083116107b857829003601f168201915b505050505081525050905084565b60038054819061037f9061191e565b6002546001600160a01b031633148061080f575061080f336105c9565b6108765760405162461bcd60e51b815260206004820152603260248201527f546869732066756e6374696f6e206973206f6e6c792063616c6c61626c652062604482015271792061206d696c6b2070726f64756365722160701b60648201526084016105fc565b600160086000828254610889919061186a565b9091555050604080516060810182524281523360208201529081016108ad8361189b565b905260085460009081526009602090815260409182902083518155838201516001820180546001600160a01b0319166001600160a01b0390921691909117905591830151805180519192600285019261090992849201906111eb565b50602082810151805161092292600185019201906111eb565b5050509050506008547f1ed9a7a467facf402d310bfed1dcb9abef3674e796e5ca5d19071da6246ec9084260405161095c91815260200190565b60405180910390a250565b6002546001600160a01b031633146109915760405162461bcd60e51b81526004016105fc90611650565b6001600160a01b038083166000908152600760205260409020600101548391610100909104166109d35760405162461bcd60e51b81526004016105fc9061169b565b6001600160a01b038316600090815260076020526040902060019081018054849260ff1990911690836003811115610a1b57634e487b7160e01b600052602160045260246000fd5b02179055506001600160a01b0383166000908152600760205260409081902090517fff2d2d00dec063c036ff49fb55b1bf52d819c4c61dd7f8805b15f51d1809028491610a6791611794565b60405180910390a1505050565b6002546001600160a01b0316331480610a915750610a9133610466565b610add5760405162461bcd60e51b815260206004820181905260248201527f4d73672e73656e646572206973206e6f74206261736963206f722061646d696e60448201526064016105fc565b818180610b475760405162461bcd60e51b815260206004820152603260248201527f506c656173652070726f76696465206174206c65617374206f6e65206d696c6b604482015271206261746368206964656e7469666965722160701b60648201526084016105fc565b60005b81811015610c0d5760096000848484818110610b7657634e487b7160e01b600052603260045260246000fd5b9050602002013581526020019081526020016000206000015460001415610bfb5760405162461bcd60e51b815260206004820152603360248201527f506c656173652070726f76696465206f6e6c79206578697374696e67206d696c6044820152726b206261746368206964656e7469666965727360681b60648201526084016105fc565b80610c0581611953565b915050610b4a565b506001806000828254610c20919061186a565b92505081905550600060405180604001604052806000151581526020016000815250905060405180608001604052808281526020016000815260200142815260200186868080602002602001604051908101604052809392919081815260200183836020028082843760009201829052509390945250506001805482526006602090815260409283902085518051825460ff19169015151782558201519281019290925584810151600283015591840151600382015560608401518051919350610cf192600485019291019061126f565b509050506001547f0bed61055f62b96d21f771dedadfcf299cb70edf954dcd0c73c73e5ef16655e542604051610d2991815260200190565b60405180910390a25050505050565b6002546001600160a01b03163314610d625760405162461bcd60e51b81526004016105fc90611650565b610d726060820160408301611377565b6001600160a01b038116610dd35760405162461bcd60e51b815260206004820152602260248201527f54686520616464726573732063616e6e6f742062652061203020616464726573604482015261732160f01b60648201526084016105fc565b610de36060830160408401611377565b6001600160a01b0381811660009081526007602052604090206001015461010090041615610e6a5760405162461bcd60e51b815260206004820152602e60248201527f41207061727469636970616e742077697468207468697320616464726573732060448201526d65786973747320616c726561647960901b60648201526084016105fc565b8260076000610e7f6060840160408501611377565b6001600160a01b031681526020810191909152604001600020610ea282826119eb565b9050507fef9377c241485790a66c08be6e52dff1ad726099e0467fb606578787de7941e383604051610a6791906116e9565b6002546001600160a01b0316331480610ef15750610ef13361041c565b610f3d5760405162461bcd60e51b815260206004820152601e60248201527f4d73672e73656e646572206973206e6f74206c6162206f722061646d696e000060448201526064016105fc565b604080518082018252821515808252426020808401828152600088815260069092528582209451855460ff1916901515178555516001909401939093559251909185917ff77d5f9755b6151104d42d1008bf3453a129d0642c72a499f7b38cb68416a6199190a45050565b6002546001600160a01b0316331480610fc55750610fc533610466565b6110115760405162461bcd60e51b815260206004820181905260248201527f4d73672e73656e646572206973206e6f74206261736963206f722061646d696e60448201526064016105fc565b60008281526006602052604090206003015482906110875760405162461bcd60e51b815260206004820152602d60248201527f546865206c6f7420776974682074686520676976656e206e756d62657220646f60448201526c6573206e6f742065786973742160981b60648201526084016105fc565b6001600080828254611099919061186a565b9091555050604080516080810182523381526000858152600660209081529083902060020154908201524291810191909152606081016110d88461189b565b905260008054815260056020908152604091829020835181546001600160a01b0319166001600160a01b039091161781558382015160018201559183015160028301556060830151805180519192600385019261113892849201906111eb565b50602082810151805161115192600185019201906111eb565b505060008054878252600660205260409182902060020181905590519093507fec445c04d22149c0897018b599bfbffbbcf13b30a4da88d37e30ee6df86d6b2492506111a1915042815260200190565b60405180910390a2505050565b5080546111ba9061191e565b6000825580601f106111ca575050565b601f0160209004906000526020600020908101906111e891906112a9565b50565b8280546111f79061191e565b90600052602060002090601f016020900481019282611219576000855561125f565b82601f1061123257805160ff191683800117855561125f565b8280016001018555821561125f579182015b8281111561125f578251825591602001919060010190611244565b5061126b9291506112a9565b5090565b82805482825590600052602060002090810192821561125f579160200282018281111561125f578251825591602001919060010190611244565b5b8082111561126b57600081556001016112aa565b80356112c981611b68565b919050565b80356112c981611b7d565b600082601f8301126112e9578081fd5b813567ffffffffffffffff8082111561130457611304611984565b604051601f8301601f19908116603f0116810190828211818310171561132c5761132c611984565b81604052838152866020858801011115611344578485fd5b8360208701602083013792830160200193909352509392505050565b600060408284031215611371578081fd5b50919050565b600060208284031215611388578081fd5b813561139381611b68565b9392505050565b600080604083850312156113ac578081fd5b82356113b781611b68565b915060208301356113c781611b7d565b809150509250929050565b600080602083850312156113e4578182fd5b823567ffffffffffffffff808211156113fb578384fd5b818501915085601f83011261140e578384fd5b81358181111561141c578485fd5b8660208260051b8501011115611430578485fd5b60209290920196919550909350505050565b600060208284031215611453578081fd5b813567ffffffffffffffff811115611469578182fd5b61147584828501611360565b949350505050565b60006020828403121561148e578081fd5b813567ffffffffffffffff8111156114a4578182fd5b820160608185031215611393578182fd5b6000602082840312156114c6578081fd5b5035919050565b600080604083850312156114df578182fd5b82359150602083013580151581146113c7578182fd5b60008060408385031215611507578182fd5b82359150602083013567ffffffffffffffff811115611524578182fd5b61153085828601611360565b9150509250929050565b6004811061155857634e487b7160e01b600052602160045260246000fd5b9052565b60008151808452815b8181101561158157602081850181015186830182015201611565565b818111156115925782602083870101525b50601f01601f19169290920160200192915050565b60008151604084526115bc604085018261155c565b9050602083015184820360208601526115d5828261155c565b95945050505050565b60018060a01b038516815283602082015282604082015260806060820152600061160b60808301846115a7565b9695505050505050565b606081526000611628606083018661155c565b9050611637602083018561153a565b6001600160a01b03929092166040919091015292915050565b6020808252602b908201527f546869732066756e6374696f6e206973206f6e6c792063616c6c61626c65206260408201526a7920616e2061646d696e2160a81b606082015260800190565b6020808252602e908201527f41207061727469636970616e742077697468207468697320616464726573732060408201526d191bd95cc81b9bdd08195e1a5cdd60921b606082015260800190565b6020815260008235601e19843603018112611702578182fd5b8301803567ffffffffffffffff81111561171a578283fd5b803603851315611728578283fd5b60606020850152806080850152806020830160a08601378260a08286010152611753602086016112ce565b9150611762604085018361153a565b61176e604086016112be565b6001600160a01b03811660608601529150601f01601f19169290920160a0019392505050565b600060208083526060818401528184546117ad8161191e565b80608087015260a06001808416600081146117cf57600181146117e35761180e565b60ff1985168984015260c08901955061180e565b898852868820885b858110156118065781548b82018601529083019088016117eb565b8a0184019650505b508801549450611828925050506040850160ff841661153a565b6001600160a01b03600883901c166060850152611475565b8381526001600160a01b03831660208201526060604082018190526000906115d5908301846115a7565b6000821982111561187d5761187d61196e565b500190565b5b818110156118975760008155600101611883565b5050565b6000604082360312156118ac578081fd5b6040516040810167ffffffffffffffff82821081831117156118d0576118d0611984565b8160405284359150808211156118e4578384fd5b6118f0368387016112d9565b83526020850135915080821115611905578384fd5b50611912368286016112d9565b60208301525092915050565b600181811c9082168061193257607f821691505b6020821081141561137157634e487b7160e01b600052602260045260246000fd5b60006000198214156119675761196761196e565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b600081356119a781611b68565b92915050565b600081356119a781611b7d565b600482106119d857634e487b7160e01b600052602160045260246000fd5b60ff1981541660ff831681178255505050565b8135601e198336030181126119ff57600080fd5b8201803567ffffffffffffffff811115611a1857600080fd5b60208136038184011315611a2b57600080fd5b611a35845461191e565b600080601f8511601f841181811715611a545760008981526020902092505b8015611a8257601f870160051c830186881015611a6e5750825b611a80601f870160051c850182611882565b505b508060018114611ab857600094508615611a9f5785848901013594505b600187901b600019600389901b1c198616178955611b0d565b601f198716945082845b86811015611ae3578986018801358255948701946001909101908701611ac2565b5087861015611b025760001960f88960031b161c1987868b0101351681555b5060018760011b0189555b5050505050600184019250611b2c611b268287016119ad565b846119ba565b5050611b63611b3d6040850161199a565b828054610100600160a81b03191660089290921b610100600160a81b0316919091179055565b505050565b6001600160a01b03811681146111e857600080fd5b600481106111e857600080fdfea26469706673582212200921575224427259d148893fe98163949a74cb598524f491e0bf0d5d45c1742564736f6c63430008040033";

type CheeseChainV2ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CheeseChainV2ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CheeseChainV2__factory extends ContractFactory {
  constructor(...args: CheeseChainV2ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CheeseChainV2> {
    return super.deploy(overrides || {}) as Promise<CheeseChainV2>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): CheeseChainV2 {
    return super.attach(address) as CheeseChainV2;
  }
  override connect(signer: Signer): CheeseChainV2__factory {
    return super.connect(signer) as CheeseChainV2__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CheeseChainV2Interface {
    return new utils.Interface(_abi) as CheeseChainV2Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CheeseChainV2 {
    return new Contract(address, _abi, signerOrProvider) as CheeseChainV2;
  }
}
